apply plugin: 'com.android.application'

android {
    compileSdkVersion Integer.parseInt(COMPILE_SDK_VERSION)
    buildToolsVersion BUILDTOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(TARGET_SDK_VERSION)
        versionName "0.0.1"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        debug {
            storeFile file("./doc/debug/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    annotationProcessor project(':arouter-compiler')
    compile project(':arouter-api')
    compile project(':module-java')
    compile project(':module-kotlin')
    compile project(':arouter-annotation')

    compile 'com.alibaba:fastjson:1.2.9'

    compile "com.android.support:support-v4:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
}
apply plugin: 'auto-register'
autoregister {
    registerInfo = [
        [
            'scanInterface'             : 'com.alibaba.android.arouter.facade.template.IRouteRoot'
            , 'codeInsertToClassName'   : 'com.alibaba.android.arouter.core.LogisticsCenter'
            , 'codeInsertToMethodName'  : 'loadRootElement'//static方法
            , 'registerMethodName'      : 'registerRouteRoot' //static方法
            , 'include'                 : [
                //只在这些路径下扫描（包分隔符需要用/表示，不能用.）
                'com/alibaba/android/arouter/routes/.*'
            ]
        ],
        [
            'scanInterface'             : 'com.alibaba.android.arouter.facade.template.IInterceptorGroup'
            , 'codeInsertToClassName'   : 'com.alibaba.android.arouter.core.LogisticsCenter'
            , 'codeInsertToMethodName'  : 'loadRootElement'//static方法
            , 'registerMethodName'      : 'registerInterceptor' //static方法
            , 'include'                 : [
                //只在这些路径下扫描（包分隔符需要用/表示，不能用.）
                'com/alibaba/android/arouter/routes/.*'
            ]
        ],
        [
            'scanInterface'             : 'com.alibaba.android.arouter.facade.template.IProviderGroup'
            , 'codeInsertToClassName'   : 'com.alibaba.android.arouter.core.LogisticsCenter'
            , 'codeInsertToMethodName'  : 'loadRootElement'//static方法
            , 'registerMethodName'      : 'registerProvider' //static方法
            , 'include'                 : [
                //只在这些路径下扫描（包分隔符需要用/表示，不能用.）
                'com/alibaba/android/arouter/routes/.*'
            ]
        ]
    ]
}